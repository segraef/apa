trigger: none

pool:
  image: ubuntu-latest

variables:
  AzureServiceConnection: <>
  SubscriptionId: ""

parameters:
  - name: subscriptionId
    displayName: Subscription ID
    type: string
    default: ''
  - name: serviceConnection
    displayName: Service connection
    type: string
    default: <>
  - name: resourceGroup
    displayName: Resource group
    type: string
    default: ''
  - name: location
    displayName: Location
    type: string
    default: ''
  - name: ImageType
    displayName: Image type
    type: string
    default: UbuntuMinimal
    values:
      - UbuntuMinimal
      - Ubuntu2004
      - Ubuntu2204
      - Windows2019

stages:
- stage: CreateImage
  displayName: Create Image
  jobs:
    - job: CreateImage
      timeoutInMinutes: 0
      displayName: Create Image

      steps:
        - task: CmdLine@2
          displayName: Clone actions/virtual-environments
          inputs:
            script: |
              echo 'Cloning into sources folder at: $(Build.SourcesDirectory)'
              git clone https://github.com/actions/virtual-environments.git --progress
              ls -l
              exit

        - task: AzureCLI@2
          displayName: Genrate VHD-Image (AzureCLI)
          enabled: true
          inputs:
            azureSubscription: '${{ variables.AzureServiceConnection }}'
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: |
              Import-Module .\virtual-environments\helpers\GenerateResourcesAndImage.ps1
              $result = GenerateResourcesAndImage `
                -SubscriptionId ${{ parameters.SubscriptionId }} `
                -ResourceGroupName ${{ parameters.resourceGroup }} `
                -ImageType ${{ parameters.imageType }} `
                -AzureLocation ${{ parameters.location }} `
              $resultObject = $result | ConvertFrom-Json
              $OSDiskUri = $resultObject.OSDiskUri
              $OSDiskUri
              Write-Host "##vso[task.setvariable variable=OSDiskUri;]$OSDiskUri"

        - task: AzurePowerShell@5
          displayName: Genrate VHD-Image (AzurePowerShell)
          enabled: false
          env:
            AZURE_CLIENT_SECRET: $(AzureClientSecret)
          inputs:
            azureSubscription: '${{ variables.AzureServiceConnection }}'
            ScriptType: 'InlineScript'
            azurePowerShellVersion: 'LatestVersion'
            pwsh: true
            Inline: |
              Import-Module .\virtual-environments\helpers\GenerateResourcesAndImage.ps1
              $result = GenerateResourcesAndImage `
                -SubscriptionId ${{ parameters.SubscriptionId }} `
                -ResourceGroupName ${{ parameters.resourceGroup }} `
                -ImageType ${{ parameters.imageType }} `
                -AzureLocation ${{ parameters.location }} `
                -AzureTenantId ${env:AZURE_TENANT_ID} `
                -AzureClientId ${env:AZURE_CLIENT_ID} `
                -AzureClientSecret ${env:AZURE_CLIENT_SECRET} `
              $resultObject = $result | ConvertFrom-Json
              $OSDiskUri = $resultObject.OSDiskUri
              $OSDiskUri
              Write-Host "##vso[task.setvariable variable=OSDiskUri;]$OSDiskUri"

        - task: AzureCLI@2
          displayName: Create image from VHD
          enabled: false
          inputs:
            azureSubscription: '${{ variables.AzureServiceConnection }}'
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: |
              $vhd = az storage blob list -c system --account-name $(StorageAccountName) | ConvertFrom-Json | Where-Object {$_.name -like "*.vhd"} | sort-object {[System.DateTime]::ParseExact($_.properties.creationTime,"MM/dd/yyyy HH:mm:ss",$null)} -Descending | Select-Object -first 1

              $vhd
              $url = "https://$(StorageAccountName).blob.core.windows.net/system/$($vhd.name)"
              Write-Host "Url: " $url

              $storageAccountId = az storage account show -n $(StorageAccountName) --query id  --output tsv

              $imageCreateResult = az sig image-version create --resource-group $(ResourceGroupName) `
              --gallery-name $(GalleryName) `
              --gallery-image-definition $(GalleryName) `
              --gallery-image-version 1.0.$(Build.BuildId) `
              --os-vhd-storage-account $storageAccountId `
              --os-vhd-uri $url

              $imageCreateResult

              $imageCreateResultObject = $imageCreateResult | ConvertFrom-Json

              $imageId = $imageCreateResultObject.id

              $imageId
              Write-Host "##vso[task.setvariable variable=ImageId;]$imageId"

        - task: AzureCLI@2
          displayName: Create Image from VHD
          enabled: true
          inputs:
            azureSubscription: '${{ parameters.serviceConnection }}'
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: |
              $result = az image create \
              -g ${{ parameters.serviceConnection }}
              \-n <name> --os-type Linux \
              --source $(OSDiskUri)

              $resultObject = $result | ConvertFrom-Json
              $imageId = $resultObject.id
              $imageId
              Write-Host "##vso[task.setvariable variable=ImageId;]$imageId"

        - task: AzureCLI@2
          displayName: Create scale set
          inputs:
            azureSubscription: '${{ parameters.serviceConnection }}'
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az vmss create \
                --name "apa-${{ parameters.imageType }}" \
                --resource-group ${{ parameters.resourceGroup }} \
                --image $(imageID) \
                --vm-sku Standard_D2_v3 \
                --storage-sku StandardSSD_LRS \
                --authentication-type SSH \
                --instance-count 2 \
                --disable-overprovision \
                --upgrade-policy-mode manual \
                --single-placement-group false \
                --platform-fault-domain-count 1 \
                --load-balancer '' \
                --vnet-name apa-vnet \
                --vnet-address-prefix 10.1.1.0/24 \
                --subnet snet-release-agents \
                --subnet-address-prefix 10.1.1.0/24

        - task: AzureCLI@2
          displayName: Update Scale set with new image
          enabled: false
          inputs:
            azureSubscription: '${{ variables.serviceConnection }}'
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: |
              Write-Output "Image Id: " $(ImageId)
              az vmss update \
                --resource-group ${{ variables.resourceGroup }} \
                --name "apa-${{ parameters.imageType }}" \
                --set virtualMachineProfile.storageProfile.imageReference.id=$(ImageId)
